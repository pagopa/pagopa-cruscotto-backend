<?xml version="1.0" encoding="utf-8"?>
<databaseChangeLog
  xmlns="http://www.liquibase.org/xml/ns/dbchangelog"
  xmlns:ext="http://www.liquibase.org/xml/ns/dbchangelog-ext"
  xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
  xsi:schemaLocation="http://www.liquibase.org/xml/ns/dbchangelog http://www.liquibase.org/xml/ns/dbchangelog/dbchangelog-3.5.xsd
                        http://www.liquibase.org/xml/ns/dbchangelog-ext http://www.liquibase.org/xml/ns/dbchangelog/dbchangelog-ext.xsd">

  <changeSet id="20250902130000-1" author="system" context="dml">
    <comment>Migrate and aggregate data from KPI_A1_DETAIL_RESULT_OLD to new KPI_A1_DETAIL_RESULT, ignoring station/method columns and using MIN(TE_OUTCOME)</comment>
    <sql>
      INSERT INTO KPI_A1_DETAIL_RESULT (
    CO_ID,
    CO_INSTANCE_ID,
    CO_INSTANCE_MODULE_ID,
    DT_ANALISYS_DATE,
    TE_EVALUATION_TYPE,
    DT_EVALUATION_START_DATE,
    DT_EVALUATION_END_DATE,
    CO_TOT_REQ,
    CO_REQ_TIMEOUT,
    CO_TIMEOUT_PERCENTAGE,
    TE_OUTCOME,
    CO_KPI_A1_RESULT_ID
)
SELECT
    MIN(D.CO_ID),
    D.CO_INSTANCE_ID,
    D.CO_INSTANCE_MODULE_ID,
    D.DT_ANALISYS_DATE,
    D.TE_EVALUATION_TYPE,
    D.DT_EVALUATION_START_DATE,
    D.DT_EVALUATION_END_DATE,
    SUM(D.CO_TOT_REQ) AS CO_TOT_REQ,
    SUM(D.CO_REQ_TIMEOUT) AS CO_REQ_TIMEOUT,
    CASE 
      WHEN SUM(D.CO_TOT_REQ) > 0 THEN (SUM(D.CO_REQ_TIMEOUT) * 100.0) / SUM(D.CO_TOT_REQ)
      ELSE 0
    END AS CO_TIMEOUT_PERCENTAGE,
    CASE WHEN 
         (CASE WHEN SUM(D.CO_TOT_REQ) > 0 THEN (SUM(D.CO_REQ_TIMEOUT) * 100.0) / SUM(D.CO_TOT_REQ) ELSE 0 END) 
         > (R.CO_ELIGIBILITY_THRESHOLD + R.CO_TOLERANCE) 
         THEN 'KO' ELSE 'OK' END AS TE_OUTCOME,
    D.CO_KPI_A1_RESULT_ID
FROM KPI_A1_DETAIL_RESULT_OLD D
JOIN KPI_A1_RESULT R ON R.CO_ID = D.CO_KPI_A1_RESULT_ID
GROUP BY
    D.CO_INSTANCE_ID,
    D.CO_INSTANCE_MODULE_ID,
    D.DT_ANALISYS_DATE,
    D.TE_EVALUATION_TYPE,
    D.DT_EVALUATION_START_DATE,
    D.DT_EVALUATION_END_DATE,
    D.CO_KPI_A1_RESULT_ID,
    R.CO_ELIGIBILITY_THRESHOLD,
    R.CO_TOLERANCE;
    </sql>
    <rollback>
      DELETE FROM KPI_A1_DETAIL_RESULT;
    </rollback>
  </changeSet>
  
  <changeSet id="20250902130000-2" author="system" context="dml">
      <comment>Set the foreign key in kpi_a1_analytic_data to the correct value from kpi_a1_detail_result for each matching row</comment>
      <sql>
        UPDATE kpi_a1_analytic_data a
         SET co_kpi_a1_detail_result_id = d.co_id
         FROM kpi_a1_detail_result d
            WHERE
             a.dt_analisys_date = d.dt_analisys_date
            AND a.co_instance_id = d.co_instance_id
            AND a.co_instance_module_id = d.co_instance_module_id
            AND a.dt_evaluation_date BETWEEN d.dt_evaluation_start_date AND d.dt_evaluation_end_date
            AND d.te_evaluation_type = 'MESE';
      </sql>
      <rollback>
        -- No rollback: deleted data cannot be restored automatically
      </rollback>
    </changeSet>

  <changeSet id="20250902130000-3" author="system" context="ddl">
    <dropForeignKeyConstraint baseTableName="KPI_A1_ANALYTIC_DATA"
                              constraintName="fk_tbcrusc8_kpia1anadata_tbcrusc8_kpia1detres"/>
    <addForeignKeyConstraint baseColumnNames="CO_KPI_A1_DETAIL_RESULT_ID"
                             baseTableName="KPI_A1_ANALYTIC_DATA"
                             constraintName="fk_tbcrusc8_kpia1anadata_tbcrusc8_kpia1detres"
                             referencedColumnNames="CO_ID"
                             referencedTableName="KPI_A1_DETAIL_RESULT"/>
</changeSet>

    
</databaseChangeLog>
