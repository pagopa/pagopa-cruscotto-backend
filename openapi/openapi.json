{
  "openapi": "3.0.1",
  "info": {
    "title": "PagoPa Cruscotto Backend API",
    "description": "PagoPa Cruscotto Backend API documentation",
    "termsOfService": "",
    "license": {
      "name": "unlicensed",
      "url": ""
    },
    "version": "0.3.4"
  },
  "servers": [
    {
      "url": "http://localhost:9000",
      "description": "Generated server url"
    }
  ],
  "paths": {
    "/api/shutdowns": {
      "get": {
        "tags": ["anag-shutdown-resource"],
        "operationId": "getAllShutdowns",
        "parameters": [
          {
            "name": "partnerId",
            "in": "query",
            "required": false,
            "schema": {
              "pattern": "^[0-9]{0,25}$",
              "type": "string"
            }
          },
          {
            "name": "page",
            "in": "query",
            "description": "Zero-based page index (0..N)",
            "required": false,
            "schema": {
              "minimum": 0,
              "type": "integer",
              "default": 0
            }
          },
          {
            "name": "size",
            "in": "query",
            "description": "The size of the page to be returned",
            "required": false,
            "schema": {
              "minimum": 1,
              "type": "integer",
              "default": 20
            }
          },
          {
            "name": "sort",
            "in": "query",
            "description": "Sorting criteria in the format: property,(asc|desc). Default sort order is ascending. Multiple sort criteria are supported.",
            "required": false,
            "schema": {
              "type": "array",
              "items": {
                "type": "string"
              }
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "*/*": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/AnagPlannedShutdownDTO"
                  }
                }
              }
            }
          }
        }
      },
      "put": {
        "tags": ["anag-shutdown-resource"],
        "operationId": "updateShutdown",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/ShutdownRequestBean"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "*/*": {
                "schema": {
                  "$ref": "#/components/schemas/AnagPlannedShutdownDTO"
                }
              }
            }
          }
        }
      },
      "post": {
        "tags": ["anag-shutdown-resource"],
        "operationId": "createAShutdown",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/ShutdownRequestBean"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "*/*": {
                "schema": {
                  "$ref": "#/components/schemas/AnagPlannedShutdownDTO"
                }
              }
            }
          }
        }
      }
    },
    "/api/instances": {
      "get": {
        "tags": ["instance-resource"],
        "operationId": "getAllInstances",
        "parameters": [
          {
            "name": "partnerId",
            "in": "query",
            "required": false,
            "schema": {
              "pattern": "^[0-9]{0,25}$",
              "type": "string"
            }
          },
          {
            "name": "page",
            "in": "query",
            "description": "Zero-based page index (0..N)",
            "required": false,
            "schema": {
              "minimum": 0,
              "type": "integer",
              "default": 0
            }
          },
          {
            "name": "size",
            "in": "query",
            "description": "The size of the page to be returned",
            "required": false,
            "schema": {
              "minimum": 1,
              "type": "integer",
              "default": 20
            }
          },
          {
            "name": "sort",
            "in": "query",
            "description": "Sorting criteria in the format: property,(asc|desc). Default sort order is ascending. Multiple sort criteria are supported.",
            "required": false,
            "schema": {
              "type": "array",
              "items": {
                "type": "string"
              }
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "*/*": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/InstanceDTO"
                  }
                }
              }
            }
          }
        }
      },
      "put": {
        "tags": ["instance-resource"],
        "operationId": "updateInstance",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/InstanceRequestBean"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "*/*": {
                "schema": {
                  "$ref": "#/components/schemas/InstanceDTO"
                }
              }
            }
          }
        }
      },
      "post": {
        "tags": ["instance-resource"],
        "operationId": "createAInstance",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/InstanceRequestBean"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "*/*": {
                "schema": {
                  "$ref": "#/components/schemas/InstanceDTO"
                }
              }
            }
          }
        }
      }
    },
    "/api/instances/update-status/{id}": {
      "put": {
        "tags": ["instance-resource"],
        "operationId": "updateInstanceStatus",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int64"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK"
          }
        }
      }
    },
    "/api/auth-users": {
      "get": {
        "tags": ["auth-user-resource"],
        "operationId": "getAllAuthUsers",
        "parameters": [
          {
            "name": "page",
            "in": "query",
            "description": "Zero-based page index (0..N)",
            "required": false,
            "schema": {
              "minimum": 0,
              "type": "integer",
              "default": 0
            }
          },
          {
            "name": "size",
            "in": "query",
            "description": "The size of the page to be returned",
            "required": false,
            "schema": {
              "minimum": 1,
              "type": "integer",
              "default": 20
            }
          },
          {
            "name": "sort",
            "in": "query",
            "description": "Sorting criteria in the format: property,(asc|desc). Default sort order is ascending. Multiple sort criteria are supported.",
            "required": false,
            "schema": {
              "type": "array",
              "items": {
                "type": "string"
              }
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "*/*": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/AuthUserDTO"
                  }
                }
              }
            }
          }
        }
      },
      "put": {
        "tags": ["auth-user-resource"],
        "operationId": "updateAuthUser",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/AuthUserUpdateRequestBean"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "*/*": {
                "schema": {
                  "$ref": "#/components/schemas/AuthUserDTO"
                }
              }
            }
          }
        }
      },
      "post": {
        "tags": ["auth-user-resource"],
        "operationId": "createAuthUser",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/AuthUserCreateRequestBean"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "*/*": {
                "schema": {
                  "$ref": "#/components/schemas/AuthUser"
                }
              }
            }
          }
        }
      }
    },
    "/api/auth-users/changeState/{id}": {
      "put": {
        "tags": ["auth-user-resource"],
        "operationId": "changeState",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int64"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK"
          }
        }
      }
    },
    "/api/auth-permissions": {
      "get": {
        "tags": ["auth-permission-resource"],
        "operationId": "getAllAuthPermissions",
        "parameters": [
          {
            "name": "nome",
            "in": "query",
            "required": false,
            "schema": {
              "maxLength": 100,
              "minLength": 0,
              "type": "string"
            }
          },
          {
            "name": "modulo",
            "in": "query",
            "required": false,
            "schema": {
              "maxLength": 50,
              "minLength": 0,
              "type": "string"
            }
          },
          {
            "name": "page",
            "in": "query",
            "description": "Zero-based page index (0..N)",
            "required": false,
            "schema": {
              "minimum": 0,
              "type": "integer",
              "default": 0
            }
          },
          {
            "name": "size",
            "in": "query",
            "description": "The size of the page to be returned",
            "required": false,
            "schema": {
              "minimum": 1,
              "type": "integer",
              "default": 20
            }
          },
          {
            "name": "sort",
            "in": "query",
            "description": "Sorting criteria in the format: property,(asc|desc). Default sort order is ascending. Multiple sort criteria are supported.",
            "required": false,
            "schema": {
              "type": "array",
              "items": {
                "type": "string"
              }
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "*/*": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/AuthPermissionDTO"
                  }
                }
              }
            }
          }
        }
      },
      "put": {
        "tags": ["auth-permission-resource"],
        "operationId": "updateAuthPermission",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/AuthPermissionDTO"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "*/*": {
                "schema": {
                  "$ref": "#/components/schemas/AuthPermissionDTO"
                }
              }
            }
          }
        }
      },
      "post": {
        "tags": ["auth-permission-resource"],
        "operationId": "createAuthPermission",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/AuthPermissionDTO"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "*/*": {
                "schema": {
                  "$ref": "#/components/schemas/AuthPermissionDTO"
                }
              }
            }
          }
        }
      }
    },
    "/api/auth-groups": {
      "get": {
        "tags": ["auth-group-resource"],
        "operationId": "getAllAuthGroups",
        "parameters": [
          {
            "name": "nome",
            "in": "query",
            "required": false,
            "schema": {
              "maxLength": 50,
              "minLength": 0,
              "type": "string"
            }
          },
          {
            "name": "descrizione",
            "in": "query",
            "required": false,
            "schema": {
              "maxLength": 200,
              "minLength": 0,
              "type": "string"
            }
          },
          {
            "name": "page",
            "in": "query",
            "description": "Zero-based page index (0..N)",
            "required": false,
            "schema": {
              "minimum": 0,
              "type": "integer",
              "default": 0
            }
          },
          {
            "name": "size",
            "in": "query",
            "description": "The size of the page to be returned",
            "required": false,
            "schema": {
              "minimum": 1,
              "type": "integer",
              "default": 20
            }
          },
          {
            "name": "sort",
            "in": "query",
            "description": "Sorting criteria in the format: property,(asc|desc). Default sort order is ascending. Multiple sort criteria are supported.",
            "required": false,
            "schema": {
              "type": "array",
              "items": {
                "type": "string"
              }
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "*/*": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/AuthGroupDTO"
                  }
                }
              }
            }
          }
        }
      },
      "put": {
        "tags": ["auth-group-resource"],
        "operationId": "updateAuthGroup",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/AuthGroupDTO"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "*/*": {
                "schema": {
                  "$ref": "#/components/schemas/AuthGroupDTO"
                }
              }
            }
          }
        }
      },
      "post": {
        "tags": ["auth-group-resource"],
        "operationId": "createAuthGroup",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/AuthGroupDTO"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "*/*": {
                "schema": {
                  "$ref": "#/components/schemas/AuthGroupDTO"
                }
              }
            }
          }
        }
      }
    },
    "/api/auth-groups/aggiorna-livello-visibilita": {
      "put": {
        "tags": ["auth-group-resource"],
        "operationId": "aggiornaLivelloVisibilitaGruppi",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "type": "array",
                "items": {
                  "$ref": "#/components/schemas/AuthGroupUpdateRequestBean"
                }
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "OK"
          }
        }
      }
    },
    "/api/auth-functions": {
      "get": {
        "tags": ["auth-function-resource"],
        "operationId": "getAllAuthFunctions",
        "parameters": [
          {
            "name": "nome",
            "in": "query",
            "required": false,
            "schema": {
              "maxLength": 50,
              "minLength": 0,
              "type": "string"
            }
          },
          {
            "name": "descrizione",
            "in": "query",
            "required": false,
            "schema": {
              "maxLength": 200,
              "minLength": 0,
              "type": "string"
            }
          },
          {
            "name": "page",
            "in": "query",
            "description": "Zero-based page index (0..N)",
            "required": false,
            "schema": {
              "minimum": 0,
              "type": "integer",
              "default": 0
            }
          },
          {
            "name": "size",
            "in": "query",
            "description": "The size of the page to be returned",
            "required": false,
            "schema": {
              "minimum": 1,
              "type": "integer",
              "default": 20
            }
          },
          {
            "name": "sort",
            "in": "query",
            "description": "Sorting criteria in the format: property,(asc|desc). Default sort order is ascending. Multiple sort criteria are supported.",
            "required": false,
            "schema": {
              "type": "array",
              "items": {
                "type": "string"
              }
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "*/*": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/AuthFunctionDTO"
                  }
                }
              }
            }
          }
        }
      },
      "put": {
        "tags": ["auth-function-resource"],
        "operationId": "updateAuthFunction",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/AuthFunctionDTO"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "*/*": {
                "schema": {
                  "$ref": "#/components/schemas/AuthFunctionDTO"
                }
              }
            }
          }
        }
      },
      "post": {
        "tags": ["auth-function-resource"],
        "operationId": "createAuthFunction",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/AuthFunctionDTO"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "*/*": {
                "schema": {
                  "$ref": "#/components/schemas/AuthFunctionDTO"
                }
              }
            }
          }
        }
      }
    },
    "/api/logout": {
      "post": {
        "tags": ["logout-resource"],
        "operationId": "logout",
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "*/*": {
                "schema": {
                  "type": "object"
                }
              }
            }
          }
        }
      }
    },
    "/api/authenticate": {
      "post": {
        "tags": ["login-controller"],
        "operationId": "authorize",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/LoginVM"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "*/*": {
                "schema": {
                  "type": "object"
                }
              }
            }
          }
        }
      }
    },
    "/api/auth-users/reset": {
      "post": {
        "tags": ["auth-user-resource"],
        "operationId": "resetPasswordUser",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "type": "string"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "OK"
          }
        }
      }
    },
    "/api/auth-groups/{idGroup}/associa-funzioni": {
      "post": {
        "tags": ["auth-group-resource"],
        "operationId": "aggiungiAssociazioneFunzione",
        "parameters": [
          {
            "name": "idGroup",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int64"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "type": "array",
                "items": {
                  "$ref": "#/components/schemas/AuthFunctionDTO"
                }
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "OK"
          }
        }
      }
    },
    "/api/auth-functions/{idFunction}/associa-permessi": {
      "post": {
        "tags": ["auth-function-resource"],
        "operationId": "aggiungiAssociazioneFunzione_1",
        "parameters": [
          {
            "name": "idFunction",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int64"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "type": "array",
                "items": {
                  "$ref": "#/components/schemas/AuthPermissionDTO"
                }
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "OK"
          }
        }
      }
    },
    "/api/account": {
      "get": {
        "tags": ["account-resource"],
        "operationId": "getAccount",
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "*/*": {
                "schema": {
                  "$ref": "#/components/schemas/AuthUserDTO"
                }
              }
            }
          }
        }
      },
      "post": {
        "tags": ["account-resource"],
        "operationId": "saveAccount",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/AuthUserAccountDTO"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "OK"
          }
        }
      }
    },
    "/api/account/reset-password/init": {
      "post": {
        "tags": ["account-resource"],
        "operationId": "requestPasswordReset",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "type": "string"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "OK"
          }
        }
      }
    },
    "/api/account/reset-password/finish": {
      "post": {
        "tags": ["account-resource"],
        "operationId": "finishPasswordReset",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/KeyAndPasswordVM"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "OK"
          }
        }
      }
    },
    "/api/account/change-password/expired": {
      "post": {
        "tags": ["account-resource"],
        "operationId": "changePassword",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/PasswordChangeRequestBean"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "OK"
          }
        }
      }
    },
    "/api/stations": {
      "get": {
        "tags": ["anag-station-resource"],
        "operationId": "getAllStations",
        "parameters": [
          {
            "name": "partnerId",
            "in": "query",
            "required": false,
            "schema": {
              "pattern": "^[0-9]{0,25}$",
              "type": "string"
            }
          },
          {
            "name": "page",
            "in": "query",
            "description": "Zero-based page index (0..N)",
            "required": false,
            "schema": {
              "minimum": 0,
              "type": "integer",
              "default": 0
            }
          },
          {
            "name": "size",
            "in": "query",
            "description": "The size of the page to be returned",
            "required": false,
            "schema": {
              "minimum": 1,
              "type": "integer",
              "default": 20
            }
          },
          {
            "name": "sort",
            "in": "query",
            "description": "Sorting criteria in the format: property,(asc|desc). Default sort order is ascending. Multiple sort criteria are supported.",
            "required": false,
            "schema": {
              "type": "array",
              "items": {
                "type": "string"
              }
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "*/*": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/AnagStationDTO"
                  }
                }
              }
            }
          }
        }
      }
    },
    "/api/shutdowns/{id}": {
      "get": {
        "tags": ["anag-shutdown-resource"],
        "operationId": "getShutdown",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int64"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "*/*": {
                "schema": {
                  "$ref": "#/components/schemas/AnagPlannedShutdownDTO"
                }
              }
            }
          }
        }
      },
      "delete": {
        "tags": ["anag-shutdown-resource"],
        "operationId": "deleteShutdown",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int64"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK"
          }
        }
      }
    },
    "/api/partners": {
      "get": {
        "tags": ["anag-partner-resource"],
        "operationId": "getAllPartners",
        "parameters": [
          {
            "name": "name",
            "in": "query",
            "required": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "page",
            "in": "query",
            "description": "Zero-based page index (0..N)",
            "required": false,
            "schema": {
              "minimum": 0,
              "type": "integer",
              "default": 0
            }
          },
          {
            "name": "size",
            "in": "query",
            "description": "The size of the page to be returned",
            "required": false,
            "schema": {
              "minimum": 1,
              "type": "integer",
              "default": 20
            }
          },
          {
            "name": "sort",
            "in": "query",
            "description": "Sorting criteria in the format: property,(asc|desc). Default sort order is ascending. Multiple sort criteria are supported.",
            "required": false,
            "schema": {
              "type": "array",
              "items": {
                "type": "string"
              }
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "*/*": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/AnagPartnerDTO"
                  }
                }
              }
            }
          }
        }
      }
    },
    "/api/language/{language}": {
      "get": {
        "tags": ["account-resource"],
        "operationId": "setLanguageCookie",
        "parameters": [
          {
            "name": "language",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK"
          }
        }
      }
    },
    "/api/kpi-results/b2/module/{moduleId}": {
      "get": {
        "tags": ["kpi-result-resource"],
        "operationId": "getKpiB2Results",
        "parameters": [
          {
            "name": "moduleId",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int64"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "*/*": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/KpiB2ResultDTO"
                  }
                }
              }
            }
          }
        }
      }
    },
    "/api/kpi-results/a2/module/{moduleId}": {
      "get": {
        "tags": ["kpi-result-resource"],
        "operationId": "getKpiA2Results",
        "parameters": [
          {
            "name": "moduleId",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int64"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "*/*": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/KpiA2ResultDTO"
                  }
                }
              }
            }
          }
        }
      }
    },
    "/api/kpi-results/a1/module/{moduleId}": {
      "get": {
        "tags": ["kpi-result-resource"],
        "operationId": "getKpiA1Results",
        "parameters": [
          {
            "name": "moduleId",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int64"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "*/*": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/KpiA1ResultDTO"
                  }
                }
              }
            }
          }
        }
      }
    },
    "/api/kpi-detail-results/b2/module/{moduleId}": {
      "get": {
        "tags": ["kpi-detail-result-resource"],
        "operationId": "getKpiB2DetailResults",
        "parameters": [
          {
            "name": "moduleId",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int64"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "*/*": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/KpiB2DetailResultDTO"
                  }
                }
              }
            }
          }
        }
      }
    },
    "/api/kpi-detail-results/a2/module/{moduleId}": {
      "get": {
        "tags": ["kpi-detail-result-resource"],
        "operationId": "getKpiA2DetailResults",
        "parameters": [
          {
            "name": "moduleId",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int64"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "*/*": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/KpiA2DetailResultDTO"
                  }
                }
              }
            }
          }
        }
      }
    },
    "/api/kpi-detail-results/a1/module/{moduleId}": {
      "get": {
        "tags": ["kpi-detail-result-resource"],
        "operationId": "getKpiA1DetailResults",
        "parameters": [
          {
            "name": "moduleId",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int64"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "*/*": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/KpiA1DetailResultDTO"
                  }
                }
              }
            }
          }
        }
      }
    },
    "/api/kpi-analytic-data/b2/module/{moduleId}": {
      "get": {
        "tags": ["kpi-analytic-data-resource"],
        "operationId": "getKpiB2AnalyticDataResults",
        "parameters": [
          {
            "name": "moduleId",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int64"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "*/*": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/KpiB2AnalyticDataDTO"
                  }
                }
              }
            }
          }
        }
      }
    },
    "/api/kpi-analytic-data/a2/module/{moduleId}": {
      "get": {
        "tags": ["kpi-analytic-data-resource"],
        "operationId": "getKpiA2AnalyticDataResults",
        "parameters": [
          {
            "name": "moduleId",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int64"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "*/*": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/KpiA2AnalyticDataDTO"
                  }
                }
              }
            }
          }
        }
      }
    },
    "/api/kpi-analytic-data/a1/module/{moduleId}": {
      "get": {
        "tags": ["kpi-analytic-data-resource"],
        "operationId": "getKpiA1AnalyticDataResults",
        "parameters": [
          {
            "name": "moduleId",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int64"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "*/*": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/KpiA1AnalyticDataDTO"
                  }
                }
              }
            }
          }
        }
      }
    },
    "/api/jobs/scheduler/update": {
      "get": {
        "tags": ["job-controller-resources"],
        "operationId": "updateJob",
        "parameters": [
          {
            "name": "jobName",
            "in": "query",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "cronExpression",
            "in": "query",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "*/*": {
                "schema": {
                  "type": "integer",
                  "format": "int32"
                }
              }
            }
          }
        }
      }
    },
    "/api/jobs/scheduler/stop": {
      "get": {
        "tags": ["job-controller-resources"],
        "operationId": "stopJob",
        "parameters": [
          {
            "name": "jobName",
            "in": "query",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "*/*": {
                "schema": {
                  "type": "integer",
                  "format": "int32"
                }
              }
            }
          }
        }
      }
    },
    "/api/jobs/scheduler/start": {
      "get": {
        "tags": ["job-controller-resources"],
        "operationId": "startJobNow",
        "parameters": [
          {
            "name": "jobName",
            "in": "query",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "*/*": {
                "schema": {
                  "type": "integer",
                  "format": "int32"
                }
              }
            }
          }
        }
      }
    },
    "/api/jobs/scheduler/resume": {
      "get": {
        "tags": ["job-controller-resources"],
        "operationId": "resume",
        "parameters": [
          {
            "name": "jobName",
            "in": "query",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "*/*": {
                "schema": {
                  "type": "integer",
                  "format": "int32"
                }
              }
            }
          }
        }
      }
    },
    "/api/jobs/scheduler/pause": {
      "get": {
        "tags": ["job-controller-resources"],
        "operationId": "pause",
        "parameters": [
          {
            "name": "jobName",
            "in": "query",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "*/*": {
                "schema": {
                  "type": "integer",
                  "format": "int32"
                }
              }
            }
          }
        }
      }
    },
    "/api/jobs/scheduler/jobs": {
      "get": {
        "tags": ["job-controller-resources"],
        "operationId": "getAllJobs",
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "*/*": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/JobsDTO"
                  }
                }
              }
            }
          }
        }
      }
    },
    "/api/instances/{id}": {
      "get": {
        "tags": ["instance-resource"],
        "operationId": "getInstance",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int64"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "*/*": {
                "schema": {
                  "$ref": "#/components/schemas/InstanceDTO"
                }
              }
            }
          }
        }
      },
      "delete": {
        "tags": ["instance-resource"],
        "operationId": "deleteInstance",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int64"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK"
          }
        }
      }
    },
    "/api/instance-modules/{id}": {
      "get": {
        "tags": ["instance-module-resource"],
        "operationId": "getInstanceModuleById",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int64"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "*/*": {
                "schema": {
                  "$ref": "#/components/schemas/InstanceModuleDTO"
                }
              }
            }
          }
        }
      }
    },
    "/api/auth-users/{login}": {
      "get": {
        "tags": ["auth-user-resource"],
        "operationId": "getAuthUser",
        "parameters": [
          {
            "name": "login",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "*/*": {
                "schema": {
                  "$ref": "#/components/schemas/AuthUserDTO"
                }
              }
            }
          }
        }
      },
      "delete": {
        "tags": ["auth-user-resource"],
        "operationId": "deleteAuthUser",
        "parameters": [
          {
            "name": "login",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK"
          }
        }
      }
    },
    "/api/auth-users/{id}/view": {
      "get": {
        "tags": ["auth-user-resource"],
        "operationId": "getAuthUserById",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int64"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "*/*": {
                "schema": {
                  "$ref": "#/components/schemas/AuthUserDTO"
                }
              }
            }
          }
        }
      }
    },
    "/api/auth-permissions/{id}": {
      "get": {
        "tags": ["auth-permission-resource"],
        "operationId": "getAuthPermission",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int64"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "*/*": {
                "schema": {
                  "$ref": "#/components/schemas/AuthPermissionDTO"
                }
              }
            }
          }
        }
      },
      "delete": {
        "tags": ["auth-permission-resource"],
        "operationId": "deleteAuthPermission",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int64"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK"
          }
        }
      }
    },
    "/api/auth-permissions/auth-function/{idFunction}": {
      "get": {
        "tags": ["auth-permission-resource"],
        "operationId": "getAllAuthFunctionsSelected",
        "parameters": [
          {
            "name": "idFunction",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int64"
            }
          },
          {
            "name": "page",
            "in": "query",
            "description": "Zero-based page index (0..N)",
            "required": false,
            "schema": {
              "minimum": 0,
              "type": "integer",
              "default": 0
            }
          },
          {
            "name": "size",
            "in": "query",
            "description": "The size of the page to be returned",
            "required": false,
            "schema": {
              "minimum": 1,
              "type": "integer",
              "default": 20
            }
          },
          {
            "name": "sort",
            "in": "query",
            "description": "Sorting criteria in the format: property,(asc|desc). Default sort order is ascending. Multiple sort criteria are supported.",
            "required": false,
            "schema": {
              "type": "array",
              "items": {
                "type": "string"
              }
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "*/*": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/AuthPermissionDTO"
                  }
                }
              }
            }
          }
        }
      }
    },
    "/api/auth-permissions/auth-function/{idFunction}/associabili": {
      "get": {
        "tags": ["auth-permission-resource"],
        "operationId": "getAllAuthFunctionsAssociabili",
        "parameters": [
          {
            "name": "idFunction",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int64"
            }
          },
          {
            "name": "nameFilter",
            "in": "query",
            "required": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "page",
            "in": "query",
            "description": "Zero-based page index (0..N)",
            "required": false,
            "schema": {
              "minimum": 0,
              "type": "integer",
              "default": 0
            }
          },
          {
            "name": "size",
            "in": "query",
            "description": "The size of the page to be returned",
            "required": false,
            "schema": {
              "minimum": 1,
              "type": "integer",
              "default": 20
            }
          },
          {
            "name": "sort",
            "in": "query",
            "description": "Sorting criteria in the format: property,(asc|desc). Default sort order is ascending. Multiple sort criteria are supported.",
            "required": false,
            "schema": {
              "type": "array",
              "items": {
                "type": "string"
              }
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "*/*": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/AuthPermissionDTO"
                  }
                }
              }
            }
          }
        }
      }
    },
    "/api/auth-groups/{id}": {
      "get": {
        "tags": ["auth-group-resource"],
        "operationId": "getAuthGroup",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int64"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "*/*": {
                "schema": {
                  "$ref": "#/components/schemas/AuthGroupDTO"
                }
              }
            }
          }
        }
      },
      "delete": {
        "tags": ["auth-group-resource"],
        "operationId": "deleteAuthGroup",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int64"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK"
          }
        }
      }
    },
    "/api/auth-groups/{idGroup}/rimuovi-funzione/{funzioneId}": {
      "get": {
        "tags": ["auth-group-resource"],
        "operationId": "rimuoviAssociazioneFunzione",
        "parameters": [
          {
            "name": "idGroup",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int64"
            }
          },
          {
            "name": "funzioneId",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int64"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK"
          }
        }
      }
    },
    "/api/auth-groups/detail/{id}": {
      "get": {
        "tags": ["auth-group-resource"],
        "operationId": "getAuthGroupWithFunction",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int64"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "*/*": {
                "schema": {
                  "$ref": "#/components/schemas/AuthGroupDTO"
                }
              }
            }
          }
        }
      }
    },
    "/api/auth-functions/{id}": {
      "get": {
        "tags": ["auth-function-resource"],
        "operationId": "getAuthFunction",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int64"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "*/*": {
                "schema": {
                  "$ref": "#/components/schemas/AuthFunctionDTO"
                }
              }
            }
          }
        }
      },
      "delete": {
        "tags": ["auth-function-resource"],
        "operationId": "deleteAuthFunction",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int64"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK"
          }
        }
      }
    },
    "/api/auth-functions/{idFunction}/rimuovi-permesso/{idPermesso}": {
      "get": {
        "tags": ["auth-function-resource"],
        "operationId": "rimuoviAssociazioneFunzione_1",
        "parameters": [
          {
            "name": "idFunction",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int64"
            }
          },
          {
            "name": "idPermesso",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int64"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK"
          }
        }
      }
    },
    "/api/auth-functions/detail/{id}": {
      "get": {
        "tags": ["auth-function-resource"],
        "operationId": "getAuthFunctionWithPermission",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int64"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "*/*": {
                "schema": {
                  "$ref": "#/components/schemas/AuthFunctionDTO"
                }
              }
            }
          }
        }
      }
    },
    "/api/auth-functions/auth-group/{idGroup}": {
      "get": {
        "tags": ["auth-function-resource"],
        "operationId": "getAllAuthFunctions_1",
        "parameters": [
          {
            "name": "idGroup",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int64"
            }
          },
          {
            "name": "page",
            "in": "query",
            "description": "Zero-based page index (0..N)",
            "required": false,
            "schema": {
              "minimum": 0,
              "type": "integer",
              "default": 0
            }
          },
          {
            "name": "size",
            "in": "query",
            "description": "The size of the page to be returned",
            "required": false,
            "schema": {
              "minimum": 1,
              "type": "integer",
              "default": 20
            }
          },
          {
            "name": "sort",
            "in": "query",
            "description": "Sorting criteria in the format: property,(asc|desc). Default sort order is ascending. Multiple sort criteria are supported.",
            "required": false,
            "schema": {
              "type": "array",
              "items": {
                "type": "string"
              }
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "*/*": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/AuthFunctionDTO"
                  }
                }
              }
            }
          }
        }
      }
    },
    "/api/auth-functions/auth-group/{idGroup}/associabili": {
      "get": {
        "tags": ["auth-function-resource"],
        "operationId": "getAllAuthFunctionsAssociabili_1",
        "parameters": [
          {
            "name": "idGroup",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int64"
            }
          },
          {
            "name": "nameFilter",
            "in": "query",
            "required": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "page",
            "in": "query",
            "description": "Zero-based page index (0..N)",
            "required": false,
            "schema": {
              "minimum": 0,
              "type": "integer",
              "default": 0
            }
          },
          {
            "name": "size",
            "in": "query",
            "description": "The size of the page to be returned",
            "required": false,
            "schema": {
              "minimum": 1,
              "type": "integer",
              "default": 20
            }
          },
          {
            "name": "sort",
            "in": "query",
            "description": "Sorting criteria in the format: property,(asc|desc). Default sort order is ascending. Multiple sort criteria are supported.",
            "required": false,
            "schema": {
              "type": "array",
              "items": {
                "type": "string"
              }
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "*/*": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/AuthFunctionDTO"
                  }
                }
              }
            }
          }
        }
      }
    },
    "/management/loggers/{name}": {
      "get": {
        "tags": ["Actuator"],
        "summary": "Actuator web endpoint 'loggers-name'",
        "operationId": "loggerLevels",
        "parameters": [
          {
            "name": "name",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/vnd.spring-boot.actuator.v3+json": {
                "schema": {
                  "type": "object"
                }
              },
              "application/vnd.spring-boot.actuator.v2+json": {
                "schema": {
                  "type": "object"
                }
              },
              "application/json": {
                "schema": {
                  "type": "object"
                }
              }
            }
          },
          "404": {
            "description": "Not Found"
          }
        }
      },
      "post": {
        "tags": ["Actuator"],
        "summary": "Actuator web endpoint 'loggers-name'",
        "operationId": "configureLogLevel",
        "parameters": [
          {
            "name": "name",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "type": "string",
                "enum": ["TRACE", "DEBUG", "INFO", "WARN", "ERROR", "FATAL", "OFF"]
              }
            }
          }
        },
        "responses": {
          "204": {
            "description": "No Content"
          },
          "400": {
            "description": "Bad Request"
          }
        }
      }
    },
    "/management": {
      "get": {
        "tags": ["Actuator"],
        "summary": "Actuator root web endpoint",
        "operationId": "links",
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/vnd.spring-boot.actuator.v3+json": {
                "schema": {
                  "type": "object",
                  "additionalProperties": {
                    "type": "object",
                    "additionalProperties": {
                      "$ref": "#/components/schemas/Link"
                    }
                  }
                }
              },
              "application/vnd.spring-boot.actuator.v2+json": {
                "schema": {
                  "type": "object",
                  "additionalProperties": {
                    "type": "object",
                    "additionalProperties": {
                      "$ref": "#/components/schemas/Link"
                    }
                  }
                }
              },
              "application/json": {
                "schema": {
                  "type": "object",
                  "additionalProperties": {
                    "type": "object",
                    "additionalProperties": {
                      "$ref": "#/components/schemas/Link"
                    }
                  }
                }
              }
            }
          }
        }
      }
    },
    "/management/threaddump": {
      "get": {
        "tags": ["Actuator"],
        "summary": "Actuator web endpoint 'threaddump'",
        "operationId": "threadDump",
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "text/plain;charset=UTF-8": {
                "schema": {
                  "type": "object"
                }
              },
              "application/vnd.spring-boot.actuator.v3+json": {
                "schema": {
                  "type": "object"
                }
              },
              "application/vnd.spring-boot.actuator.v2+json": {
                "schema": {
                  "type": "object"
                }
              },
              "application/json": {
                "schema": {
                  "type": "object"
                }
              }
            }
          }
        }
      }
    },
    "/management/prometheus": {
      "get": {
        "tags": ["Actuator"],
        "summary": "Actuator web endpoint 'prometheus'",
        "operationId": "scrape",
        "parameters": [
          {
            "name": "format",
            "in": "query",
            "schema": {
              "type": "string",
              "enum": ["CONTENT_TYPE_004", "CONTENT_TYPE_OPENMETRICS_100"]
            }
          },
          {
            "name": "includedNames",
            "in": "query",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "text/plain;version=0.0.4;charset=utf-8": {
                "schema": {
                  "type": "object"
                }
              },
              "application/openmetrics-text;version=1.0.0;charset=utf-8": {
                "schema": {
                  "type": "object"
                }
              }
            }
          }
        }
      }
    },
    "/management/loggers": {
      "get": {
        "tags": ["Actuator"],
        "summary": "Actuator web endpoint 'loggers'",
        "operationId": "loggers",
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/vnd.spring-boot.actuator.v3+json": {
                "schema": {
                  "type": "object"
                }
              },
              "application/vnd.spring-boot.actuator.v2+json": {
                "schema": {
                  "type": "object"
                }
              },
              "application/json": {
                "schema": {
                  "type": "object"
                }
              }
            }
          }
        }
      }
    },
    "/management/liquibase": {
      "get": {
        "tags": ["Actuator"],
        "summary": "Actuator web endpoint 'liquibase'",
        "operationId": "liquibaseBeans",
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/vnd.spring-boot.actuator.v3+json": {
                "schema": {
                  "type": "object"
                }
              },
              "application/vnd.spring-boot.actuator.v2+json": {
                "schema": {
                  "type": "object"
                }
              },
              "application/json": {
                "schema": {
                  "type": "object"
                }
              }
            }
          }
        }
      }
    },
    "/management/jhiopenapigroups": {
      "get": {
        "tags": ["Actuator"],
        "summary": "Actuator web endpoint 'jhiopenapigroups'",
        "operationId": "allOpenApi",
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/vnd.spring-boot.actuator.v3+json": {
                "schema": {
                  "type": "object"
                }
              },
              "application/vnd.spring-boot.actuator.v2+json": {
                "schema": {
                  "type": "object"
                }
              },
              "application/json": {
                "schema": {
                  "type": "object"
                }
              }
            }
          }
        }
      }
    },
    "/management/jhimetrics": {
      "get": {
        "tags": ["Actuator"],
        "summary": "Actuator web endpoint 'jhimetrics'",
        "operationId": "allMetrics",
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/vnd.spring-boot.actuator.v3+json": {
                "schema": {
                  "type": "object"
                }
              },
              "application/vnd.spring-boot.actuator.v2+json": {
                "schema": {
                  "type": "object"
                }
              },
              "application/json": {
                "schema": {
                  "type": "object"
                }
              }
            }
          }
        }
      }
    },
    "/management/info": {
      "get": {
        "tags": ["Actuator"],
        "summary": "Actuator web endpoint 'info'",
        "operationId": "info",
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/vnd.spring-boot.actuator.v3+json": {
                "schema": {
                  "type": "object"
                }
              },
              "application/vnd.spring-boot.actuator.v2+json": {
                "schema": {
                  "type": "object"
                }
              },
              "application/json": {
                "schema": {
                  "type": "object"
                }
              }
            }
          }
        }
      }
    },
    "/management/health": {
      "get": {
        "tags": ["Actuator"],
        "summary": "Actuator web endpoint 'health'",
        "operationId": "health",
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/vnd.spring-boot.actuator.v3+json": {
                "schema": {
                  "type": "object"
                }
              },
              "application/vnd.spring-boot.actuator.v2+json": {
                "schema": {
                  "type": "object"
                }
              },
              "application/json": {
                "schema": {
                  "type": "object"
                }
              }
            }
          }
        }
      }
    },
    "/management/env": {
      "get": {
        "tags": ["Actuator"],
        "summary": "Actuator web endpoint 'env'",
        "operationId": "environment",
        "parameters": [
          {
            "name": "pattern",
            "in": "query",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/vnd.spring-boot.actuator.v3+json": {
                "schema": {
                  "type": "object"
                }
              },
              "application/vnd.spring-boot.actuator.v2+json": {
                "schema": {
                  "type": "object"
                }
              },
              "application/json": {
                "schema": {
                  "type": "object"
                }
              }
            }
          }
        }
      }
    },
    "/management/env/{toMatch}": {
      "get": {
        "tags": ["Actuator"],
        "summary": "Actuator web endpoint 'env-toMatch'",
        "operationId": "environmentEntry",
        "parameters": [
          {
            "name": "toMatch",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/vnd.spring-boot.actuator.v3+json": {
                "schema": {
                  "type": "object"
                }
              },
              "application/vnd.spring-boot.actuator.v2+json": {
                "schema": {
                  "type": "object"
                }
              },
              "application/json": {
                "schema": {
                  "type": "object"
                }
              }
            }
          },
          "404": {
            "description": "Not Found"
          }
        }
      }
    },
    "/management/configprops": {
      "get": {
        "tags": ["Actuator"],
        "summary": "Actuator web endpoint 'configprops'",
        "operationId": "configurationProperties",
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/vnd.spring-boot.actuator.v3+json": {
                "schema": {
                  "type": "object"
                }
              },
              "application/vnd.spring-boot.actuator.v2+json": {
                "schema": {
                  "type": "object"
                }
              },
              "application/json": {
                "schema": {
                  "type": "object"
                }
              }
            }
          }
        }
      }
    },
    "/management/configprops/{prefix}": {
      "get": {
        "tags": ["Actuator"],
        "summary": "Actuator web endpoint 'configprops-prefix'",
        "operationId": "configurationPropertiesWithPrefix",
        "parameters": [
          {
            "name": "prefix",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/vnd.spring-boot.actuator.v3+json": {
                "schema": {
                  "type": "object"
                }
              },
              "application/vnd.spring-boot.actuator.v2+json": {
                "schema": {
                  "type": "object"
                }
              },
              "application/json": {
                "schema": {
                  "type": "object"
                }
              }
            }
          },
          "404": {
            "description": "Not Found"
          }
        }
      }
    },
    "/management/caches": {
      "get": {
        "tags": ["Actuator"],
        "summary": "Actuator web endpoint 'caches'",
        "operationId": "caches",
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/vnd.spring-boot.actuator.v3+json": {
                "schema": {
                  "type": "object"
                }
              },
              "application/vnd.spring-boot.actuator.v2+json": {
                "schema": {
                  "type": "object"
                }
              },
              "application/json": {
                "schema": {
                  "type": "object"
                }
              }
            }
          }
        }
      },
      "delete": {
        "tags": ["Actuator"],
        "summary": "Actuator web endpoint 'caches'",
        "operationId": "clearCaches",
        "responses": {
          "204": {
            "description": "No Content"
          }
        }
      }
    },
    "/management/caches/{cache}": {
      "get": {
        "tags": ["Actuator"],
        "summary": "Actuator web endpoint 'caches-cache'",
        "operationId": "cache",
        "parameters": [
          {
            "name": "cache",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "cacheManager",
            "in": "query",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/vnd.spring-boot.actuator.v3+json": {
                "schema": {
                  "type": "object"
                }
              },
              "application/vnd.spring-boot.actuator.v2+json": {
                "schema": {
                  "type": "object"
                }
              },
              "application/json": {
                "schema": {
                  "type": "object"
                }
              }
            }
          },
          "404": {
            "description": "Not Found"
          }
        }
      },
      "delete": {
        "tags": ["Actuator"],
        "summary": "Actuator web endpoint 'caches-cache'",
        "operationId": "clearCache",
        "parameters": [
          {
            "name": "cache",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "cacheManager",
            "in": "query",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "204": {
            "description": "No Content"
          },
          "404": {
            "description": "Not Found"
          }
        }
      }
    }
  },

  "components": {
    "schemas": {
      "ShutdownRequestBean": {
        "required": ["partnerId", "shutdownEndDate", "shutdownStartDate", "stationId"],
        "type": "object",
        "properties": {
          "id": {
            "type": "integer",
            "format": "int64"
          },
          "partnerId": {
            "type": "string"
          },
          "shutdownStartDate": {
            "pattern": "(0[1-9]|[12][0-9]|3[01])-(0[1-9]|1[012])-[0-9]{4} ([01][0-9]|2[0-3]):[0-5][0-9]:00",
            "type": "string"
          },
          "shutdownEndDate": {
            "pattern": "(0[1-9]|[12][0-9]|3[01])-(0[1-9]|1[012])-[0-9]{4} ([01][0-9]|2[0-3]):[0-5][0-9]:00",
            "type": "string"
          },
          "stationId": {
            "type": "string"
          }
        }
      },
      "AnagPlannedShutdownDTO": {
        "required": [
          "externalId",
          "partnerFiscalCode",
          "shutdownEndDate",
          "shutdownStartDate",
          "standInd",
          "stationName",
          "typePlanned",
          "year"
        ],
        "type": "object",
        "properties": {
          "id": {
            "type": "integer",
            "format": "int64"
          },
          "typePlanned": {
            "type": "string",
            "enum": ["PROGRAMMATO", "NON_PROGRAMMATO"]
          },
          "standInd": {
            "type": "boolean"
          },
          "shutdownStartDate": {
            "type": "string",
            "format": "date-time"
          },
          "shutdownEndDate": {
            "type": "string",
            "format": "date-time"
          },
          "year": {
            "type": "integer",
            "format": "int64"
          },
          "externalId": {
            "type": "integer",
            "format": "int64"
          },
          "partnerId": {
            "type": "integer",
            "format": "int64"
          },
          "partnerFiscalCode": {
            "type": "string"
          },
          "partnerName": {
            "type": "string"
          },
          "stationId": {
            "type": "integer",
            "format": "int64"
          },
          "stationName": {
            "type": "string"
          }
        }
      },
      "InstanceRequestBean": {
        "required": ["analysisPeriodEndDate", "analysisPeriodStartDate", "partnerId", "predictedDateAnalysis"],
        "type": "object",
        "properties": {
          "id": {
            "type": "integer",
            "format": "int64"
          },
          "partnerId": {
            "type": "string"
          },
          "predictedDateAnalysis": {
            "pattern": "(0[1-9]|[12][0-9]|3[01])/(0[1-9]|1[012])/[0-9]{4}",
            "type": "string"
          },
          "analysisPeriodStartDate": {
            "pattern": "(0[1-9]|[12][0-9]|3[01])/(0[1-9]|1[012])/[0-9]{4}",
            "type": "string"
          },
          "analysisPeriodEndDate": {
            "pattern": "(0[1-9]|[12][0-9]|3[01])/(0[1-9]|1[012])/[0-9]{4}",
            "type": "string"
          }
        }
      },
      "InstanceDTO": {
        "type": "object",
        "properties": {
          "id": {
            "type": "integer",
            "format": "int64"
          },
          "instanceIdentification": {
            "type": "string"
          },
          "partnerId": {
            "type": "integer",
            "format": "int64"
          },
          "partnerFiscalCode": {
            "type": "string"
          },
          "partnerName": {
            "type": "string"
          },
          "predictedDateAnalysis": {
            "type": "string",
            "format": "date"
          },
          "applicationDate": {
            "type": "string",
            "format": "date-time"
          },
          "assignedUserId": {
            "type": "integer",
            "format": "int64"
          },
          "assignedFirstName": {
            "type": "string"
          },
          "assignedLastName": {
            "type": "string"
          },
          "analysisPeriodStartDate": {
            "type": "string",
            "format": "date"
          },
          "analysisPeriodEndDate": {
            "type": "string",
            "format": "date"
          },
          "status": {
            "type": "string",
            "enum": ["BOZZA", "PIANIFICATA", "IN_ESECUZIONE", "ESEGUITA"]
          },
          "lastAnalysisDate": {
            "type": "string",
            "format": "date-time"
          },
          "lastAnalysisOutcome": {
            "type": "string",
            "enum": ["STANDBY", "OK", "KO"]
          },
          "instanceModules": {
            "uniqueItems": true,
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/InstanceModuleDTO"
            }
          }
        }
      },
      "InstanceModuleDTO": {
        "type": "object",
        "properties": {
          "id": {
            "type": "integer",
            "format": "int64"
          },
          "instanceId": {
            "type": "integer",
            "format": "int64"
          },
          "moduleId": {
            "type": "integer",
            "format": "int64"
          },
          "moduleCode": {
            "type": "string"
          },
          "analysisType": {
            "type": "string",
            "enum": ["AUTOMATICA", "MANUALE"]
          },
          "allowManualOutcome": {
            "type": "boolean"
          },
          "automaticOutcome": {
            "type": "string",
            "enum": ["STANDBY", "OK", "KO"]
          },
          "automaticOutcomeDate": {
            "type": "string",
            "format": "date-time"
          },
          "manualOutcome": {
            "type": "string",
            "enum": ["STANDBY", "OK", "KO"]
          },
          "status": {
            "type": "string",
            "enum": ["ATTIVO", "NON_ATTIVO"]
          },
          "assignedUserId": {
            "type": "integer",
            "format": "int64"
          },
          "manualOutcomeDate": {
            "type": "string",
            "format": "date-time"
          },
          "assignedUserFirstName": {
            "type": "string"
          },
          "assignedUserLastName": {
            "type": "string"
          }
        }
      },
      "AuthUserUpdateRequestBean": {
        "required": ["firstName", "groupId", "id", "lastName"],
        "type": "object",
        "properties": {
          "id": {
            "type": "integer",
            "format": "int64"
          },
          "firstName": {
            "maxLength": 50,
            "minLength": 0,
            "type": "string"
          },
          "lastName": {
            "maxLength": 50,
            "minLength": 0,
            "type": "string"
          },
          "email": {
            "maxLength": 254,
            "minLength": 5,
            "type": "string"
          },
          "password": {
            "type": "string"
          },
          "langKey": {
            "maxLength": 10,
            "minLength": 2,
            "type": "string"
          },
          "groupId": {
            "type": "integer",
            "format": "int64"
          }
        }
      },
      "AuthUserDTO": {
        "required": ["groupId", "login"],
        "type": "object",
        "properties": {
          "id": {
            "type": "integer",
            "format": "int64"
          },
          "login": {
            "maxLength": 50,
            "minLength": 1,
            "type": "string"
          },
          "firstName": {
            "maxLength": 50,
            "minLength": 0,
            "type": "string"
          },
          "lastName": {
            "maxLength": 50,
            "minLength": 0,
            "type": "string"
          },
          "email": {
            "maxLength": 254,
            "minLength": 5,
            "type": "string"
          },
          "imageUrl": {
            "maxLength": 256,
            "minLength": 0,
            "type": "string"
          },
          "activated": {
            "type": "boolean"
          },
          "langKey": {
            "maxLength": 10,
            "minLength": 2,
            "type": "string"
          },
          "createdBy": {
            "type": "string"
          },
          "createdDate": {
            "type": "string",
            "format": "date-time"
          },
          "lastModifiedBy": {
            "type": "string"
          },
          "lastModifiedDate": {
            "type": "string",
            "format": "date-time"
          },
          "groupId": {
            "type": "integer",
            "format": "int64"
          },
          "groupName": {
            "type": "string"
          },
          "authorities": {
            "uniqueItems": true,
            "type": "array",
            "items": {
              "type": "string"
            }
          },
          "passwordExpiredDate": {
            "type": "string",
            "format": "date"
          },
          "blocked": {
            "type": "boolean"
          },
          "deleted": {
            "type": "boolean"
          },
          "authenticationType": {
            "type": "string",
            "enum": ["FORM_LOGIN", "OAUHT2"]
          },
          "deletedDate": {
            "type": "string",
            "format": "date-time"
          }
        }
      },
      "AuthPermissionDTO": {
        "required": ["modulo", "nome"],
        "type": "object",
        "properties": {
          "id": {
            "type": "integer",
            "format": "int64"
          },
          "nome": {
            "maxLength": 100,
            "minLength": 0,
            "type": "string"
          },
          "modulo": {
            "maxLength": 50,
            "minLength": 0,
            "type": "string"
          },
          "type": {
            "type": "string"
          }
        }
      },
      "AuthFunctionDTO": {
        "required": ["descrizione", "modulo", "nome"],
        "type": "object",
        "properties": {
          "id": {
            "type": "integer",
            "format": "int64"
          },
          "nome": {
            "maxLength": 50,
            "minLength": 0,
            "type": "string"
          },
          "modulo": {
            "maxLength": 50,
            "minLength": 0,
            "type": "string"
          },
          "descrizione": {
            "maxLength": 200,
            "minLength": 0,
            "type": "string"
          },
          "type": {
            "type": "string"
          },
          "groupId": {
            "type": "integer",
            "format": "int64"
          },
          "selected": {
            "type": "boolean"
          },
          "authPermissions": {
            "uniqueItems": true,
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/AuthPermissionDTO"
            }
          }
        }
      },
      "AuthGroupDTO": {
        "required": ["descrizione", "nome"],
        "type": "object",
        "properties": {
          "id": {
            "type": "integer",
            "format": "int64"
          },
          "nome": {
            "maxLength": 50,
            "minLength": 0,
            "type": "string"
          },
          "descrizione": {
            "maxLength": 200,
            "minLength": 0,
            "type": "string"
          },
          "livelloVisibilita": {
            "type": "integer",
            "format": "int32"
          },
          "authFunctions": {
            "uniqueItems": true,
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/AuthFunctionDTO"
            }
          }
        }
      },
      "AuthGroupUpdateRequestBean": {
        "required": ["id", "livelloVisibilita"],
        "type": "object",
        "properties": {
          "id": {
            "type": "string"
          },
          "livelloVisibilita": {
            "pattern": "^[0-9]{0,9}$",
            "type": "string"
          }
        }
      },
      "LoginVM": {
        "required": ["password", "username"],
        "type": "object",
        "properties": {
          "username": {
            "maxLength": 50,
            "minLength": 1,
            "type": "string"
          },
          "password": {
            "maxLength": 100,
            "minLength": 1,
            "type": "string"
          },
          "rememberMe": {
            "type": "boolean"
          }
        }
      },
      "AuthUserCreateRequestBean": {
        "required": ["firstName", "groupId", "lastName", "login"],
        "type": "object",
        "properties": {
          "login": {
            "maxLength": 50,
            "minLength": 0,
            "type": "string"
          },
          "firstName": {
            "maxLength": 50,
            "minLength": 0,
            "type": "string"
          },
          "lastName": {
            "maxLength": 50,
            "minLength": 0,
            "type": "string"
          },
          "email": {
            "maxLength": 254,
            "minLength": 5,
            "type": "string"
          },
          "password": {
            "type": "string"
          },
          "langKey": {
            "maxLength": 10,
            "minLength": 2,
            "type": "string"
          },
          "groupId": {
            "type": "integer",
            "format": "int64"
          }
        }
      },
      "AuthFunction": {
        "type": "object",
        "properties": {
          "id": {
            "type": "integer",
            "format": "int64"
          },
          "nome": {
            "maxLength": 50,
            "minLength": 1,
            "type": "string"
          },
          "modulo": {
            "maxLength": 50,
            "minLength": 1,
            "type": "string"
          },
          "descrizione": {
            "maxLength": 200,
            "minLength": 1,
            "type": "string"
          },
          "authPermissions": {
            "uniqueItems": true,
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/AuthPermission"
            }
          }
        }
      },
      "AuthGroup": {
        "required": ["livelloVisibilita"],
        "type": "object",
        "properties": {
          "id": {
            "type": "integer",
            "format": "int64"
          },
          "nome": {
            "maxLength": 50,
            "minLength": 1,
            "type": "string"
          },
          "descrizione": {
            "maxLength": 200,
            "minLength": 1,
            "type": "string"
          },
          "livelloVisibilita": {
            "type": "integer",
            "format": "int32"
          },
          "authFunctions": {
            "uniqueItems": true,
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/AuthFunction"
            }
          },
          "authUsers": {
            "uniqueItems": true,
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/AuthUser"
            }
          }
        }
      },
      "AuthPermission": {
        "type": "object",
        "properties": {
          "id": {
            "type": "integer",
            "format": "int64"
          },
          "nome": {
            "maxLength": 100,
            "minLength": 1,
            "type": "string"
          },
          "modulo": {
            "maxLength": 50,
            "minLength": 1,
            "type": "string"
          }
        }
      },
      "AuthUser": {
        "required": ["activated", "authenticationType", "blocked", "login"],
        "type": "object",
        "properties": {
          "id": {
            "type": "integer",
            "format": "int64"
          },
          "login": {
            "maxLength": 50,
            "minLength": 1,
            "type": "string"
          },
          "firstName": {
            "maxLength": 50,
            "minLength": 0,
            "type": "string"
          },
          "lastName": {
            "maxLength": 50,
            "minLength": 0,
            "type": "string"
          },
          "email": {
            "maxLength": 254,
            "minLength": 5,
            "type": "string"
          },
          "activated": {
            "type": "boolean"
          },
          "langKey": {
            "maxLength": 10,
            "minLength": 2,
            "type": "string"
          },
          "imageUrl": {
            "maxLength": 256,
            "minLength": 0,
            "type": "string"
          },
          "resetDate": {
            "type": "string",
            "format": "date-time"
          },
          "failedLoginAttempts": {
            "type": "integer",
            "format": "int32"
          },
          "lastPasswordChangeDate": {
            "type": "string",
            "format": "date-time"
          },
          "passwordExpiredDay": {
            "type": "integer",
            "format": "int32"
          },
          "blocked": {
            "type": "boolean"
          },
          "deleted": {
            "type": "boolean"
          },
          "deletedDate": {
            "type": "string",
            "format": "date-time"
          },
          "authenticationType": {
            "type": "string",
            "enum": ["FORM_LOGIN", "OAUHT2"]
          },
          "group": {
            "$ref": "#/components/schemas/AuthGroup"
          }
        }
      },
      "AuthUserAccountDTO": {
        "type": "object",
        "properties": {
          "firstName": {
            "maxLength": 50,
            "minLength": 0,
            "type": "string"
          },
          "lastName": {
            "maxLength": 50,
            "minLength": 0,
            "type": "string"
          },
          "email": {
            "maxLength": 254,
            "minLength": 5,
            "type": "string"
          },
          "langKey": {
            "maxLength": 10,
            "minLength": 2,
            "type": "string"
          }
        }
      },
      "KeyAndPasswordVM": {
        "type": "object",
        "properties": {
          "key": {
            "type": "string"
          },
          "newPassword": {
            "type": "string"
          }
        }
      },
      "PasswordChangeRequestBean": {
        "required": ["newPassword"],
        "type": "object",
        "properties": {
          "currentPassword": {
            "type": "string"
          },
          "newPassword": {
            "type": "string"
          }
        }
      },
      "AnagStationDTO": {
        "required": ["name", "partnerFiscalCode", "paymentOption", "primitiveVersion", "status"],
        "type": "object",
        "properties": {
          "id": {
            "type": "integer",
            "format": "int64"
          },
          "name": {
            "type": "string"
          },
          "activationDate": {
            "type": "string",
            "format": "date"
          },
          "partnerId": {
            "type": "integer",
            "format": "int64"
          },
          "partnerFiscalCode": {
            "type": "string"
          },
          "partnerName": {
            "type": "string"
          },
          "typeConnection": {
            "type": "string"
          },
          "primitiveVersion": {
            "type": "integer",
            "format": "int32"
          },
          "paymentOption": {
            "type": "boolean"
          },
          "status": {
            "type": "string",
            "enum": ["ATTIVA", "NON_ATTIVA"]
          },
          "deactivationDate": {
            "type": "string",
            "format": "date"
          }
        }
      },
      "AnagPartnerDTO": {
        "required": ["fiscalCode", "name", "status"],
        "type": "object",
        "properties": {
          "id": {
            "type": "integer",
            "format": "int64"
          },
          "fiscalCode": {
            "type": "string"
          },
          "name": {
            "type": "string"
          },
          "status": {
            "type": "string",
            "enum": ["ATTIVO", "NON_ATTIVO"]
          },
          "qualified": {
            "type": "boolean"
          },
          "deactivationDate": {
            "type": "string",
            "format": "date"
          }
        }
      },
      "KpiB2ResultDTO": {
        "required": [
          "analysisDate",
          "averageTimeLimit",
          "eligibilityThreshold",
          "evaluationType",
          "excludePlannedShutdown",
          "excludeUnplannedShutdown",
          "instanceId",
          "instanceModuleId",
          "outcome",
          "tollerance"
        ],
        "type": "object",
        "properties": {
          "id": {
            "type": "integer",
            "format": "int64"
          },
          "instanceId": {
            "type": "integer",
            "format": "int64"
          },
          "instanceModuleId": {
            "type": "integer",
            "format": "int64"
          },
          "analysisDate": {
            "type": "string",
            "format": "date"
          },
          "excludePlannedShutdown": {
            "type": "boolean"
          },
          "excludeUnplannedShutdown": {
            "type": "boolean"
          },
          "eligibilityThreshold": {
            "type": "number",
            "format": "double"
          },
          "tollerance": {
            "type": "number",
            "format": "double"
          },
          "averageTimeLimit": {
            "type": "number",
            "format": "double"
          },
          "evaluationType": {
            "type": "string",
            "enum": ["MESE", "TOTALE"]
          },
          "outcome": {
            "type": "string",
            "enum": ["OK", "KO", "RUNNING", "STANDBY"]
          }
        }
      },
      "KpiA2ResultDTO": {
        "required": ["analysisDate", "instanceId", "instanceModuleId", "outcome", "tollerance"],
        "type": "object",
        "properties": {
          "id": {
            "type": "integer",
            "format": "int64"
          },
          "instanceId": {
            "type": "integer",
            "format": "int64"
          },
          "instanceModuleId": {
            "type": "integer",
            "format": "int64"
          },
          "analysisDate": {
            "type": "string",
            "format": "date"
          },
          "tollerance": {
            "type": "number",
            "format": "double"
          },
          "outcome": {
            "type": "string",
            "enum": ["OK", "KO", "RUNNING", "STANDBY"]
          }
        }
      },
      "KpiA1ResultDTO": {
        "required": [
          "analysisDate",
          "eligibilityThreshold",
          "evaluationType",
          "excludePlannedShutdown",
          "excludeUnplannedShutdown",
          "instanceId",
          "instanceModuleId",
          "outcome",
          "tollerance"
        ],
        "type": "object",
        "properties": {
          "id": {
            "type": "integer",
            "format": "int64"
          },
          "instanceId": {
            "type": "integer",
            "format": "int64"
          },
          "instanceModuleId": {
            "type": "integer",
            "format": "int64"
          },
          "analysisDate": {
            "type": "string",
            "format": "date"
          },
          "excludePlannedShutdown": {
            "type": "boolean"
          },
          "excludeUnplannedShutdown": {
            "type": "boolean"
          },
          "eligibilityThreshold": {
            "type": "number",
            "format": "double"
          },
          "tollerance": {
            "type": "number",
            "format": "double"
          },
          "evaluationType": {
            "type": "string",
            "enum": ["MESE", "TOTALE"]
          },
          "outcome": {
            "type": "string",
            "enum": ["OK", "KO", "RUNNING", "STANDBY"]
          }
        }
      },
      "KpiB2DetailResultDTO": {
        "required": [
          "analysisDate",
          "avgTime",
          "evaluationEndDate",
          "evaluationStartDate",
          "evaluationType",
          "instanceId",
          "instanceModuleId",
          "method",
          "outcome",
          "overTimeLimit",
          "stationId",
          "totReq"
        ],
        "type": "object",
        "properties": {
          "id": {
            "type": "integer",
            "format": "int64"
          },
          "instanceId": {
            "type": "integer",
            "format": "int64"
          },
          "instanceModuleId": {
            "type": "integer",
            "format": "int64"
          },
          "analysisDate": {
            "type": "string",
            "format": "date"
          },
          "stationId": {
            "type": "integer",
            "format": "int64"
          },
          "method": {
            "type": "string"
          },
          "evaluationType": {
            "type": "string",
            "enum": ["MESE", "TOTALE"]
          },
          "evaluationStartDate": {
            "type": "string",
            "format": "date"
          },
          "evaluationEndDate": {
            "type": "string",
            "format": "date"
          },
          "totReq": {
            "type": "integer",
            "format": "int64"
          },
          "avgTime": {
            "type": "number",
            "format": "double"
          },
          "overTimeLimit": {
            "type": "number",
            "format": "double"
          },
          "outcome": {
            "type": "string",
            "enum": ["OK", "KO", "RUNNING", "STANDBY"]
          },
          "kpiB2ResultId": {
            "type": "integer",
            "format": "int64"
          }
        }
      },
      "KpiA2DetailResultDTO": {
        "required": [
          "analysisDate",
          "errorPercentage",
          "evaluationEndDate",
          "evaluationStartDate",
          "instanceId",
          "instanceModuleId",
          "outcome",
          "totIncorrectPayments",
          "totPayments"
        ],
        "type": "object",
        "properties": {
          "id": {
            "type": "integer",
            "format": "int64"
          },
          "instanceId": {
            "type": "integer",
            "format": "int64"
          },
          "instanceModuleId": {
            "type": "integer",
            "format": "int64"
          },
          "analysisDate": {
            "type": "string",
            "format": "date"
          },
          "evaluationStartDate": {
            "type": "string",
            "format": "date"
          },
          "evaluationEndDate": {
            "type": "string",
            "format": "date"
          },
          "totPayments": {
            "type": "integer",
            "format": "int64"
          },
          "totIncorrectPayments": {
            "type": "integer",
            "format": "int64"
          },
          "errorPercentage": {
            "type": "number",
            "format": "double"
          },
          "outcome": {
            "type": "string",
            "enum": ["OK", "KO", "RUNNING", "STANDBY"]
          },
          "kpiA2ResultId": {
            "type": "integer",
            "format": "int64"
          }
        }
      },
      "KpiA1DetailResultDTO": {
        "required": [
          "analysisDate",
          "evaluationEndDate",
          "evaluationStartDate",
          "evaluationType",
          "instanceId",
          "instanceModuleId",
          "method",
          "outcome",
          "reqTimeout",
          "stationId",
          "timeoutPercentage",
          "totReq"
        ],
        "type": "object",
        "properties": {
          "id": {
            "type": "integer",
            "format": "int64"
          },
          "instanceId": {
            "type": "integer",
            "format": "int64"
          },
          "instanceModuleId": {
            "type": "integer",
            "format": "int64"
          },
          "analysisDate": {
            "type": "string",
            "format": "date"
          },
          "stationId": {
            "type": "integer",
            "format": "int64"
          },
          "method": {
            "type": "string"
          },
          "evaluationType": {
            "type": "string",
            "enum": ["MESE", "TOTALE"]
          },
          "evaluationStartDate": {
            "type": "string",
            "format": "date"
          },
          "evaluationEndDate": {
            "type": "string",
            "format": "date"
          },
          "totReq": {
            "type": "integer",
            "format": "int64"
          },
          "reqTimeout": {
            "type": "integer",
            "format": "int64"
          },
          "timeoutPercentage": {
            "type": "number",
            "format": "double"
          },
          "outcome": {
            "type": "string",
            "enum": ["OK", "KO", "RUNNING", "STANDBY"]
          },
          "kpiA1ResultId": {
            "type": "integer",
            "format": "int64"
          }
        }
      },
      "KpiB2AnalyticDataDTO": {
        "required": [
          "analysisDate",
          "avgTime",
          "evaluationDate",
          "instanceId",
          "instanceModuleId",
          "method",
          "reqOk",
          "reqTimeout",
          "stationId",
          "totReq"
        ],
        "type": "object",
        "properties": {
          "id": {
            "type": "integer",
            "format": "int64"
          },
          "instanceId": {
            "type": "integer",
            "format": "int64"
          },
          "instanceModuleId": {
            "type": "integer",
            "format": "int64"
          },
          "analysisDate": {
            "type": "string",
            "format": "date"
          },
          "stationId": {
            "type": "integer",
            "format": "int64"
          },
          "method": {
            "type": "string"
          },
          "evaluationDate": {
            "type": "string",
            "format": "date"
          },
          "totReq": {
            "type": "integer",
            "format": "int64"
          },
          "reqOk": {
            "type": "integer",
            "format": "int64"
          },
          "reqTimeout": {
            "type": "integer",
            "format": "int64"
          },
          "avgTime": {
            "type": "number",
            "format": "double"
          },
          "kpiB2DetailResultId": {
            "type": "integer",
            "format": "int64"
          }
        }
      },
      "KpiA2AnalyticDataDTO": {
        "required": ["analysisDate", "evaluationDate", "instanceId", "instanceModuleId", "totIncorrectPayments", "totPayments"],
        "type": "object",
        "properties": {
          "id": {
            "type": "integer",
            "format": "int64"
          },
          "instanceId": {
            "type": "integer",
            "format": "int64"
          },
          "instanceModuleId": {
            "type": "integer",
            "format": "int64"
          },
          "analysisDate": {
            "type": "string",
            "format": "date"
          },
          "evaluationDate": {
            "type": "string",
            "format": "date"
          },
          "totPayments": {
            "type": "integer",
            "format": "int64"
          },
          "totIncorrectPayments": {
            "type": "integer",
            "format": "int64"
          },
          "kpiA2DetailResultId": {
            "type": "integer",
            "format": "int64"
          }
        }
      },
      "KpiA1AnalyticDataDTO": {
        "required": [
          "analysisDate",
          "evaluationDate",
          "instanceId",
          "instanceModuleId",
          "method",
          "reqOk",
          "reqTimeoutReal",
          "reqTimeoutValid",
          "stationId",
          "totReq"
        ],
        "type": "object",
        "properties": {
          "id": {
            "type": "integer",
            "format": "int64"
          },
          "instanceId": {
            "type": "integer",
            "format": "int64"
          },
          "instanceModuleId": {
            "type": "integer",
            "format": "int64"
          },
          "analysisDate": {
            "type": "string",
            "format": "date"
          },
          "stationId": {
            "type": "integer",
            "format": "int64"
          },
          "method": {
            "type": "string"
          },
          "evaluationDate": {
            "type": "string",
            "format": "date"
          },
          "totReq": {
            "type": "integer",
            "format": "int64"
          },
          "reqOk": {
            "type": "integer",
            "format": "int64"
          },
          "reqTimeoutReal": {
            "type": "integer",
            "format": "int64"
          },
          "reqTimeoutValid": {
            "type": "integer",
            "format": "int64"
          },
          "kpiA1DetailResultId": {
            "type": "integer",
            "format": "int64"
          }
        }
      },
      "JobsDTO": {
        "type": "object",
        "properties": {
          "jobName": {
            "type": "string"
          },
          "groupName": {
            "type": "string"
          },
          "scheduleTime": {
            "type": "string",
            "format": "date-time"
          },
          "lastFiredTime": {
            "type": "string",
            "format": "date-time"
          },
          "nextFireTime": {
            "type": "string",
            "format": "date-time"
          },
          "jobStatus": {
            "type": "string"
          },
          "cron": {
            "type": "string"
          }
        }
      },
      "Link": {
        "type": "object",
        "properties": {
          "href": {
            "type": "string"
          },
          "templated": {
            "type": "boolean"
          }
        }
      }
    }
  }
}
